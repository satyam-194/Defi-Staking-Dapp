{"ast":null,"code":"import _regeneratorRuntime from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\nimport RWD from '../truffle_abis/RWD.json';\nimport DecentralBank from '../truffle_abis/DE.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.ethereum);\n                } else {\n                  window.alert('No Ethereum browser detected! You can check out metamask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                //load tether contract\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 19;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 14;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 14:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 20;\n                break;\n\n              case 19:\n                window.alert(' Erroe! Tether contract not deployed to the n0- detected network');\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/satyamkushwaha/defi-staking-app-starter/defi-staking-app-starter/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","RWD","DecentralBank","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","alert","eth","getAccounts","account","setState","net","getId","networkId","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","console","log","balance","props","rwd","decentralBank","rwdBalance","stakingBalance","loading"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;;IAGMC,G;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;;;;;;;;;;qBAKPC,MAAM,CAACC,Q;;;;;AACND,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIT,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAd;;uBACMD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,E;;;;;;;AAEL,oBAAGH,MAAM,CAACE,IAAV,EAAe;AAChBF,kBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIT,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAd;AACH,iBAFI,MAGA;AACDD,kBAAAA,MAAM,CAACI,KAAP,CAAa,2DAAb;AACH;;;;;;;;;;;;;;;;;;;;;;;;;AAIKF,gBAAAA,I,GAAOF,MAAM,CAACE,I;;uBACGA,IAAI,CAACG,GAAL,CAASC,WAAT,E;;;AAAjBC,gBAAAA,O;AACN,qBAAKC,QAAL,CAAc;AAACD,kBAAAA,OAAO,EAAEA,OAAO,CAAC,CAAD;AAAjB,iBAAd;;uBACwBL,IAAI,CAACG,GAAL,CAASI,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AAEN;AAEMC,gBAAAA,U,GAAalB,MAAM,CAACmB,QAAP,CAAgBF,SAAhB,C;;qBAChBC,U;;;;;AACOE,gBAAAA,M,GAAS,IAAIZ,IAAI,CAACG,GAAL,CAASU,QAAb,CAAsBrB,MAAM,CAACsB,GAA7B,EAAiCJ,UAAU,CAACK,OAA5C,C;AACf,qBAAKT,QAAL,CAAc;AAACM,kBAAAA,MAAM,EAANA;AAAD,iBAAd;;uBAC0BA,MAAM,CAACI,OAAP,CAAeC,SAAf,CAAyB,KAAKC,KAAL,CAAWb,OAApC,EAA6Cc,IAA7C,E;;;AAAtBC,gBAAAA,a;AACJ,qBAAKd,QAAL,CAAc;AAACc,kBAAAA,aAAa,EAAEA,aAAa,CAACC,QAAd;AAAhB,iBAAd;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,kBAAAA,OAAO,EAAEJ;AAAV,iBAAZ;;;;;AAGAtB,gBAAAA,MAAM,CAACI,KAAP,CAAa,kEAAb;;;;;;;;;;;;;;;;;;AAMR,eAAYuB,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKP,KAAL,GAAa;AACTb,MAAAA,OAAO,EAAG,KADD;AAETO,MAAAA,MAAM,EAAG,EAFA;AAGTc,MAAAA,GAAG,EAAG,EAHG;AAITC,MAAAA,aAAa,EAAG,EAJP;AAKTP,MAAAA,aAAa,EAAG,GALP;AAMTQ,MAAAA,UAAU,EAAG,GANJ;AAOTC,MAAAA,cAAc,EAAG,GAPR;AAQTC,MAAAA,OAAO,EAAG;AARD,KAAb;AAFc;AAajB;;;;6BAEW;AACJ,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAI,KAAKZ,KAAL,CAAWb,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADJ;AAOH;;;;EAnEahB,S;;AAsElB,eAAeM,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport './App.css'\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json'\nimport RWD from '../truffle_abis/RWD.json'\nimport DecentralBank from '../truffle_abis/DE.json'\n\n\nclass App extends Component{\n\n    async UNSAFE_componentWillMount(){\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n\n    }\n\nasync loadWeb3(){\n    if(window.ethereum){\n        window.web3 = new Web3(window.ethereum)\n        await window.ethereum.enable()\n    }\n    else if(window.web3){\n        window.web3 = new Web3(window.ethereum)\n    }\n    else {\n        window.alert('No Ethereum browser detected! You can check out metamask!')\n    }\n}\n\nasync loadBlockchainData(){\n    const web3 = window.web3\n    const account =  await web3.eth.getAccounts()\n    this.setState({account: account[0]})\n    const networkId = await web3.eth.net.getId()\n\n    //load tether contract\n\n    const tetherData = Tether.networks[networkId]\n    if(tetherData){\n        const tether = new web3.eth.Contract(Tether.abi,tetherData.address)\n        this.setState({tether})\n        let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\n        this.setState({tetherBalance: tetherBalance.toString()})\n        console.log({balance: tetherBalance})\n    }\n    else {\n        window.alert(' Erroe! Tether contract not deployed to the n0- detected network')\n    }\n    \n}\n\n\nconstructor(props){\n    super(props)\n    this.state = {\n        account : '0x0',\n        tether : {},\n        rwd : {},\n        decentralBank : {},\n        tetherBalance : '0',\n        rwdBalance : '0',\n        stakingBalance : '0',\n        loading : true\n    }\n\n}\n\n    render(){\n        return(\n            <div>\n            <Navbar account = {this.state.account} />\n            \n                \n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}